services:
  frontend:
    container_name: website
    image: zatarain/portfolio-web
    build: web
    ports:
      - 5000:5000
    depends_on:
      - backend
    volumes:
      - web-source:/web
    environment:
      API_URL: http://service:3000
      NODE_ENV: development
  backend:
    container_name: service
    image: zatarain/portfolio-api
    build: api
    ports:
      - 3000:3000
    depends_on:
      - database
    volumes:
      - api-source:/api
    environment:
      RAILS_ENV: development
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_ENVIRONMENT: development
      AWS_ASSUME_ROLE: ${AWS_ASSUME_ROLE}
      AWS_SESSION_NAME: api-download-yaml-cv
      INSTAGRAM_CLIENT_ID: ${INSTAGRAM_CLIENT_ID}
      INSTAGRAM_CLIENT_SECRET: ${INSTAGRAM_CLIENT_SECRET}
      INSTAGRAM_REDIRECT_URI: ${INSTAGRAM_REDIRECT_URI}
      INSTAGRAM_ACCESS_TOKEN: ${INSTAGRAM_ACCESS_TOKEN}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  database:
    container_name: database
    image: postgis/postgis:14-3.3
    restart: always
    ports:
      - 5432:5432
    volumes:
      - data:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: postgres

volumes:
  web-source:
    name: portfolio-web-source
    driver: local
    driver_opts:
      o: bind
      type: none
      device: web
  api-source:
    name: portfolio-api-source
    driver: local
    driver_opts:
      o: bind
      type: none
      device: api
  data:
    name: portfolio-database
    driver: local
    driver_opts:
      o: bind
      type: none
      device: data
